plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

apply from: '../sign_store.gradle'
apply from: '../dependencies.gradle'

android {
    namespace APP_ID
    compileSdk 33

    defaultConfig {
        applicationId APP_ID
        minSdk 24
        targetSdk 33
        versionCode Integer.valueOf(MOBILE_VERSION_CODE)
        versionName MOBILE_VERSION_NAME
        buildConfigField 'String', 'BASE_URL', '"https://api.mercadolibre.com/"'
        testInstrumentationRunner "com.kevinserrano.supermeli.SuperMELIApplicationTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    kapt {
        correctErrorTypes = true
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests {
            returnDefaultValues = true
        }
    }
}

dependencies {

    / Architecture Components /
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    //Rooms
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"

    /---------------------- UI ------------------------/
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$android_material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayout"
    implementation "androidx.core:core-splashscreen:$core_splashscreen"
    //Lottie
    implementation "com.airbnb.android:lottie:$lottie"

    /-------------------------- Sdks Firebase ----------------------/
    //Firebase Crashlytics
    implementation "com.google.firebase:firebase-crashlytics-ktx:$firebase_crashlytics"
    //Firebase Analytics
    implementation "com.google.firebase:firebase-analytics-ktx:$firebase_analytics"

    / --------------------------Others Libraries------------------------/
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    //Okhttps
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
    //Timber
    debugImplementation "com.jakewharton.timber:timber:$timber"
    //Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android"
    //Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    //Navigation Fragment
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_fragment"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ui"

    / -------------------------- Tests ------------------------/
    testImplementation "junit:junit:$junit"
    testImplementation "io.mockk:mockk:$mockk"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test"
    testImplementation "androidx.arch.core:core-testing:$core_testing"

    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation "androidx.test:core-ktx:$test_core_ktx"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_junit"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_reflect"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_contrib"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_android_testing"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_android_testing"
    androidTestImplementation "androidx.annotation:annotation:$annotation"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_intents"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"
}